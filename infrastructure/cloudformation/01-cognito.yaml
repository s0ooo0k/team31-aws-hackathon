AWSTemplateFormatVersion: '2010-09-09'
Description: 'Nova English Learning - Cognito User Authentication'

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, prod]
    Description: Environment name
  
  ProjectName:
    Type: String
    Default: nova-english-learning
    Description: Project name for resource naming

Resources:
  # Cognito User Pool
  NovaUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub '${ProjectName}-${Environment}'
      AliasAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      EmailConfiguration:
        EmailSendingAccount: COGNITO_DEFAULT
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireUppercase: true
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: false
      Schema:
        - Name: email
          AttributeDataType: String
          Required: true
          Mutable: true
        - Name: name
          AttributeDataType: String
          Required: true
          Mutable: true
        - Name: preferred_username
          AttributeDataType: String
          Required: false
          Mutable: true
      UserPoolTags:
        Environment: !Ref Environment
        Project: !Ref ProjectName

  # Cognito User Pool Client
  NovaUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: !Sub '${ProjectName}-${Environment}-client'
      UserPoolId: !Ref NovaUserPool
      GenerateSecret: false
      ExplicitAuthFlows:
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
        - ALLOW_USER_PASSWORD_AUTH
      SupportedIdentityProviders:
        - COGNITO
      CallbackURLs:
        - http://localhost:3000
        - !Sub 'https://${ProjectName}-${Environment}-${AWS::AccountId}.s3-website-us-east-1.amazonaws.com'
      LogoutURLs:
        - http://localhost:3000
        - !Sub 'https://${ProjectName}-${Environment}-${AWS::AccountId}.s3-website-us-east-1.amazonaws.com'
      AllowedOAuthFlows:
        - code
        - implicit
      AllowedOAuthScopes:
        - email
        - openid
        - profile
      AllowedOAuthFlowsUserPoolClient: true
      RefreshTokenValidity: 30
      AccessTokenValidity: 60
      IdTokenValidity: 60
      TokenValidityUnits:
        AccessToken: minutes
        IdToken: minutes
        RefreshToken: days

  # Cognito User Pool Domain
  NovaUserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: !Sub '${ProjectName}-${Environment}-${AWS::AccountId}'
      UserPoolId: !Ref NovaUserPool

Outputs:
  UserPoolId:
    Description: Cognito User Pool ID
    Value: !Ref NovaUserPool
    Export:
      Name: !Sub '${AWS::StackName}-UserPoolId'

  UserPoolClientId:
    Description: Cognito User Pool Client ID
    Value: !Ref NovaUserPoolClient
    Export:
      Name: !Sub '${AWS::StackName}-UserPoolClientId'

  UserPoolDomain:
    Description: Cognito User Pool Domain
    Value: !Ref NovaUserPoolDomain
    Export:
      Name: !Sub '${AWS::StackName}-UserPoolDomain'

  UserPoolArn:
    Description: Cognito User Pool ARN
    Value: !GetAtt NovaUserPool.Arn
    Export:
      Name: !Sub '${AWS::StackName}-UserPoolArn'

  HostedUIURL:
    Description: Cognito Hosted UI URL
    Value: !Sub 'https://${NovaUserPoolDomain}.auth.us-east-1.amazoncognito.com/login?client_id=${NovaUserPoolClient}&response_type=code&scope=email+openid+profile&redirect_uri=http://localhost:3000'
    Export:
      Name: !Sub '${AWS::StackName}-HostedUIURL'